version: '2'

services:
    mysql:
        #image: mysql
        image: mysql:5.7
        #build: mysql
        restart: always
        # 初始化时的参数配置 启动之后进入容器可修改 
        # 再次启动时还是修改后的配置,就跟这里的配置无关了
        environment:
            - MYSQL_ROOT_PASSWORD=123456
            - MYSQL_DATABASE=scrapy
            - MYSQL_USER=root
            - MYSQL_PASSWORD=123456
            - MYSQL_HOST=0.0.0.0
            - MYSQL_PORT=3306  # cannot change this port to other number
            - MYSQL_ROOT_HOST=%

        ports:
            - '3306:3306'
        volumes:
          - './database/mysql:/var/lib/mysql'
          - './femn.conf:/etc/mysql/mysql.conf.d/femn.cnf'
            # - './database/mysql:/var/lib/mysql'
#            - './femn.conf:/etc/mysql/conf.d/qhh.cnf'
#            - './femn.cnf:/etc/mysql/my.cnf'  # 不能覆盖镜像文件(mysql:5.7中启动文件)

#        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0

        #   - xx:/var/lib/mysql  
        #   会自动在/var/lib/docker/volumes下,创建dockerfiles_xx目录,所以必须要有 ./

        # - ./database/mysql:var/lib/mysql # 当database目录没有mysql目录时,也会自动创建
        # - /data # 当只有一个时，表示的是容器的目录,容器的定义的目录,它将会自动保存在宿主机的/var/lib/docker/volumes目录的_data目录下,如下等同
        # Dockerfile中 VOLUME ["/data1","/data2"] 创建的挂载点,无法指定主机上对应的目录,是自动生成的

        networks:
          - back-tier
    mongo:
        image: mongo
        restart: always
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: 123456
        ports:
            - '27017:27017'
        volumes:
            - './database/mongo:/data/db'

    redis:
        image: 'bitnami/redis:latest'
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
#            - REDIS_PASSWORD=admin123
        ports:
            - '6379:6379'
            # (HOST:CONTAINER)
        volumes: #chmod 777 -R redis
            - ./database/redis:/bitnami
            # - /path/to/redis-persistence:/bitnami/redis/data
            - ./database/redis.conf:/opt/bitnami/redis/etc/redis.conf # 但可以先在本地创建redis.conf之后,再volumes.同时不是镜像中默认的配置文件
        restart: always
        networks:
          - back-tier


networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
